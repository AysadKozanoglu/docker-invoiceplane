#!/bin/bash
set -e
source ${INVOICEPLANE_RUNTIME_DIR}/env-defaults

INVOICEPLANE_TEMPLATES_DIR=${INVOICEPLANE_RUNTIME_DIR}/config

## Execute a command as OWNCLOUD_USER
exec_as_invoiceplane() {
  if [[ $(whoami) == ${INVOICEPLANE_USER} ]]; then
    $@
  else
    sudo -HEu ${INVOICEPLANE_USER} "$@"
  fi
}

## Copies configuration template in ${INVOICEPLANE_TEMPLATES_DIR} to the destination as the specified USER
# $1: copy-as user
# $2: source file
# $3: destination location
# $4: mode of destination
install_template() {
  local USR=${1}
  local SRC=${2}
  local DEST=${3}
  local MODE=${4:-0644}
  if [[ -f ${INVOICEPLANE_TEMPLATES_DIR}/${SRC} ]]; then
    sudo -HEu ${USR} cp ${INVOICEPLANE_TEMPLATES_DIR}/${SRC} ${DEST}
  fi
  chmod ${MODE} ${DEST}
}

## Replace placeholders with values
# $1: file with placeholders to replace
# $x: placeholders to replace
update_template() {
  local FILE=${1?missing argument}
  shift

  [[ ! -f ${FILE} ]] && return 1

  local VARIABLES=($@)
  local USR=$(stat -c %U ${FILE})
  local tmp_file=$(mktemp)
  cp -a "${FILE}" ${tmp_file}

  local variable
  for variable in ${VARIABLES[@]}; do
    # Keep the compatibilty: {{VAR}} => ${VAR}
    sed -ri "s/[{]{2}$variable[}]{2}/\${$variable}/g" ${tmp_file}
  done

  # Replace placeholders
  (
    export ${VARIABLES[@]}
    local IFS=":"; sudo -HEu ${USR} envsubst "${VARIABLES[*]/#/$}" < ${tmp_file} > ${FILE}
  )
  rm -f ${tmp_file}
}

invoiceplane_finalize_database_parameters() {
  # is a mysql container linked?
  if [[ -n ${MYSQL_PORT_3306_TCP_ADDR} ]]; then
    DB_TYPE=${DB_TYPE:-mysql}
    DB_HOST=${DB_HOST:-$MYSQL_PORT_3306_TCP_ADDR}
    DB_PORT=${DB_PORT:-$MYSQL_PORT_3306_TCP_PORT}

    # support for linked sameersbn/mysql image
    DB_USER=${DB_USER:-$MYSQL_ENV_DB_USER}
    DB_PASS=${DB_PASS:-$MYSQL_ENV_DB_PASS}
    DB_NAME=${DB_NAME:-$MYSQL_ENV_DB_NAME}

    # support for linked orchardup/mysql and enturylink/mysql image
    # also supports official mysql image
    DB_USER=${DB_USER:-$MYSQL_ENV_MYSQL_USER}
    DB_PASS=${DB_PASS:-$MYSQL_ENV_MYSQL_PASSWORD}
    DB_NAME=${DB_NAME:-$MYSQL_ENV_MYSQL_DATABASE}
  fi

  # set default port, user and database
  DB_PORT=${DB_PORT:-3306}
  DB_USER=${DB_USER:-root}
  DB_NAME=${DB_NAME:-invoiceplane_db}

  if [[ -z ${DB_HOST} ]]; then
    echo
    echo "ERROR: "
    echo "  Please configure the database connection."
    echo "  Cannot continue without a database. Aborting..."
    echo
    return 1
  fi
}

invoiceplane_check_database_connection() {
  prog="mysqladmin -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} ${DB_PASS:+-p$DB_PASS} status"
  timeout=60
  while ! ${prog} >/dev/null 2>&1
  do
    timeout=$(expr $timeout - 1)
    if [[ $timeout -eq 0 ]]; then
      echo
      echo "Could not connect to database server. Aborting..."
      return 1
    fi
    echo -n "."
    sleep 1
  done
  echo
}

invoiceplane_finalize_php_fpm_parameters() {
  # is a invoiceplane-php-fpm container linked?
  if [[ -n ${PHP_FPM_PORT_9000_TCP_ADDR} ]]; then
    INVOICEPLANE_PHP_FPM_HOST=${INVOICEPLANE_PHP_FPM_HOST:-$PHP_FPM_PORT_9000_TCP_ADDR}
    INVOICEPLANE_PHP_FPM_PORT=${INVOICEPLANE_PHP_FPM_PORT:-$PHP_FPM_PORT_9000_TCP_PORT}
  fi

  if [[ -z ${INVOICEPLANE_PHP_FPM_HOST} ]]; then
    echo
    echo "ERROR: "
    echo "  Please configure the php-fpm connection. Aborting..."
    echo
    return 1
  fi

  # use default php-fpm port number if it is still not set
  INVOICEPLANE_PHP_FPM_PORT=${INVOICEPLANE_PHP_FPM_PORT:-9000}
}

invoiceplane_configure_database() {
  echo -n "Configuring InvoicePlane::database"
  invoiceplane_finalize_database_parameters
  invoiceplane_check_database_connection

  update_template ${INVOICEPLANE_INSTALL_DIR}/application/config/database.php \
    DB_HOST \
    DB_PORT \
    DB_USER \
    DB_PASS \
    DB_NAME
}

invoiceplane_configure_timezone() {
  update_template ${INVOICEPLANE_INSTALL_DIR}/.user.ini INVOICEPLANE_TIMEZONE
}

nginx_configure_virtualhost() {
  echo "Configuring InvoicePlane virtualhost..."
  invoiceplane_finalize_php_fpm_parameters
  update_template /etc/nginx/sites-enabled/${INVOICEPLANE_FQDN}.conf \
    INVOICEPLANE_FQDN \
    INVOICEPLANE_PHP_FPM_HOST \
    INVOICEPLANE_PHP_FPM_PORT
}

initialize_datadir() {
  echo "Initializing datadir..."
  chmod 0755 ${INVOICEPLANE_DATA_DIR}
  chown ${INVOICEPLANE_USER}:${INVOICEPLANE_USER} ${INVOICEPLANE_DATA_DIR}

  # initialize uploads directory
  if [[ ! -d ${INVOICEPLANE_UPLOADS_DIR} ]]; then
    cp -a ${INVOICEPLANE_INSTALL_DIR}/uploads.template ${INVOICEPLANE_UPLOADS_DIR}
  fi
  ln -sf ${INVOICEPLANE_UPLOADS_DIR} ${INVOICEPLANE_INSTALL_DIR}/uploads

  CURRENT_VERSION=
  [[ -f ${INVOICEPLANE_DATA_DIR}/VERSION ]] && CURRENT_VERSION=$(cat ${INVOICEPLANE_DATA_DIR}/VERSION)
  if [[ ${INVOICEPLANE_VERSION} != ${CURRENT_VERSION} ]]; then
    echo -n "${INVOICEPLANE_VERSION}" > ${INVOICEPLANE_DATA_DIR}/VERSION
  fi

  chown -R ${INVOICEPLANE_USER}:${INVOICEPLANE_USER} ${INVOICEPLANE_UPLOADS_DIR}
}

install_configuration_templates() {
  echo "Installing configuration templates..."
  install_template ${INVOICEPLANE_USER} invoiceplane/database.php ${INVOICEPLANE_INSTALL_DIR}/application/config/database.php 0644

  if [[ -d /etc/nginx/sites-enabled && ! -f /etc/nginx/sites-enabled/${INVOICEPLANE_FQDN}.conf ]]; then
    install_template root nginx/InvoicePlane.conf /etc/nginx/sites-enabled/${INVOICEPLANE_FQDN}.conf 0644
    update_template /etc/nginx/sites-enabled/${INVOICEPLANE_FQDN}.conf INVOICEPLANE_INSTALL_DIR
  fi
}

initialize_system() {
  initialize_datadir
  install_configuration_templates
}

configure_invoiceplane() {
  echo "Configuring InvoicePlane..."
  invoiceplane_configure_database
  invoiceplane_configure_timezone
}

configure_nginx() {
  echo "Configuring nginx..."
  nginx_configure_virtualhost
}
